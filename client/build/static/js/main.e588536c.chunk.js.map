{"version":3,"sources":["Board.js","InGame.js","App.js","serviceWorker.js","index.js"],"names":["descriptions","CARRIER","name","color","length","BATTLESHIP","CRUISER","SUBMARINE","DESTROYER","SHIPS","Object","freeze","INITIAL_BOARD","Board","props","setStateTracker","state","setState","getOnClick","e","game_state","onBoxClick","i","j","target","id","split","map","k","Number","selected","nb","start","direction","currentDirection","getOnMouseEnter","carrier","battleship","cruiser","submarine","destroyer","totalCords","copy2dArray","renderingCords","updateCord","val","arr","res","curr","push","reset","errorMessage","buttons","preEdit","totalCordsCopy","ship","_i","s","toLowerCase","includes","_j","getOnMouseLeave","initialCords","nextProps","this","Styles","owner","styled","div","StylesCreator","style","width","height","justifyContent","alignItems","display","flexDirection","ToggleButtonGroup","type","defaultValue","onChange","ToggleButton","value","variant","Dropdown","Toggle","Menu","Item","onClick","marginTop","React","createElement","className","row","it","alt","onMouseEnter","splitted","onMouseLeave","ref","r","Button","onBuildEnd","data","Component","InGame","turn","column","socket","emit","game_id","gameId","user_id","userId","playerCords","playerData","enemyCords","self_hits","E","total_sunks","isLost","isWon","on","sf","field","feedback","isSunk","filter","pc","sunkCords","ts","col","reduce","acc","sunk","forEach","numHit","objHit","numEnemyHit","Card","bg","text","Header","Body","Title","enemyName","Text","App","createGame","room_name","roomName","username","startGame","createRoomOnSubmit","nu","trim","ng","isFormOneValidated","connectGameOnSubmit","preventDefault","enemy","game","startable","isHost","opponentReady","io","padding","ListGroup","active","alignSelf","size","disabled","Accordion","as","eventKey","Collapse","Form","createForm","validated","onSubmit","Group","controlId","Label","Control","required","placeholder","isOpponentReady","onReady","ready_state","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e588536c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst descriptions = [\r\n    \"Carrier, which has five consecutive holes\",\r\n    \"Battleship, which has four consecutive holes\",\r\n    \"Cruiser, which has three consecutive holes\",\r\n    \"Submarine, which has three consecutive holes\",\r\n    \"Destroyer, which has two consecutive holes\"\r\n];\r\nconst CARRIER = {\r\n    name: \"Carrier\",\r\n    color: \"#007bff\",\r\n    length: 5    \r\n};\r\nconst BATTLESHIP = {\r\n    name: \"Battleship\",\r\n    color: \"#ffc107\",\r\n    length: 4\r\n};\r\nconst CRUISER = {\r\n    name: \"Cruiser\",\r\n    color: \"#28a745\",\r\n    length: 3\r\n};\r\nconst SUBMARINE = {\r\n    name: \"Submarine\",\r\n    color: \"#17a2b8\",\r\n    length: 3\r\n}\r\nconst DESTROYER = {\r\n    name: \"Destroyer\",\r\n    color: \"#007bff\",\r\n    length: 2\r\n}\r\n\r\nconst StylesCreator = (game_state, owner = \"none\") => styled.div\r\n`\r\n    .box {\r\n        width: ${game_state === \"ingame\" ? 4 : 5}vh;\r\n        height: ${game_state === \"ingame\" ? 4 : 5}vh;\r\n        background-color: #d1cfcf;\r\n        border: solid 1px;\r\n    }\r\n    .hit {\r\n        background-color: red;\r\n    }\r\n    .miss {\r\n        background-color: white;\r\n    }\r\n    .cruiser {\r\n        background-color: ${CRUISER.color};\r\n    }\r\n    .carrier {\r\n        background-color: ${CARRIER.color};\r\n    }\r\n    .battleship {\r\n        background-color: ${BATTLESHIP.color};\r\n    }\r\n    .submarine {\r\n        background-color: ${SUBMARINE.color};\r\n    }\r\n    .destroyer {\r\n        background-color: ${DESTROYER.color};\r\n    }\r\n    .sunk {\r\n        background-color: black;\r\n    }\r\n    .main {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: ${game_state === \"ingame\" ? 50 : 40}%;\r\n        justify-content: center;\r\n        margin-top: 3vh;\r\n    } \r\n    .building {\r\n        cursor: pointer;\r\n    }\r\n    ${\r\n        owner === \"self\" ? \"\" : \r\n        `\r\n        .ingame {\r\n            cursor: pointer;\r\n            :hover {\r\n                background-color: #b0b0b0;\r\n            }\r\n        }\r\n        `\r\n    }\r\n    h3 {\r\n        font-size: 24px;\r\n    }\r\n    .bottom-btn-c {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 50%;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n    }\r\n`\r\nconst {INITIAL_BOARD} = Object.freeze({INITIAL_BOARD: [\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n    ['E','E','E','E','E','E','E','E','E','E','E'],\r\n]});\r\n\r\n\r\nexport const SHIPS = [CARRIER, BATTLESHIP, CRUISER,SUBMARINE, DESTROYER];\r\nexport default class Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalCords: props.initialCords ? this.copy2dArray(props.initialCords) :  Object.freeze([\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ]),\r\n            carrier: {start: null, direction: null},\r\n            battleship: {start: null, direction: null},\r\n            cruiser: {start: null, direction: null},\r\n            submarine: {start: null, direction: null},\r\n            destroyer: {start: null, direction: null},\r\n            selected: 0,\r\n            currentDirection: \"Horizontal\",\r\n            errorMessage: \"\",\r\n            renderingCords: props.initialCords ? this.copy2dArray(props.initialCords) :  Object.freeze([\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ])\r\n        }\r\n        this.buttons = [\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n        ];\r\n        this.preEdit=[[]];\r\n        \r\n    }\r\n    \r\n    setStateTracker = (state) => {\r\n        this.setState(state);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.initialCords) {\r\n            this.setState({totalCords: this.copy2dArray(nextProps.initialCords), renderingCords: this.copy2dArray(nextProps.initialCords)})\r\n        }\r\n    }\r\n    getOnClick = (e) => {\r\n        if(this.props.game_state !== \"building\") return this.props.onBoxClick(e);\r\n        let box = e.target;\r\n        let i, j; \r\n        [i, j] = box.id.split(\"|\").map(k => Number(k));\r\n        \r\n        let {selected, currentDirection} = this.state;\r\n        let nb = {start: [i, j], direction: currentDirection};\r\n\r\n        if(this.getOnMouseEnter(i,j)) return;\r\n\r\n\r\n        if(selected === 0) {\r\n            this.setState({\r\n                carrier: nb\r\n            });\r\n        } else if(selected === 1) {\r\n            this.setState({\r\n                battleship: nb\r\n            });\r\n        } else if(selected === 2) {\r\n            this.setState({\r\n                cruiser: nb\r\n            });\r\n        } else if(selected === 3) {\r\n            this.setState({\r\n                submarine: nb\r\n            });\r\n        } else if(selected === 4) {\r\n            this.setState({\r\n                destroyer: nb\r\n            });\r\n        } else {\r\n            return;\r\n        }\r\n        this.setState({\r\n            totalCords: this.copy2dArray(this.state.renderingCords), selected: this.state.selected + 1\r\n        });\r\n    }\r\n    updateCord = ({i, j, val}) => {\r\n        let {totalCords} = this.state;\r\n        totalCords[i][j] = val;\r\n        this.setStateTracker({totalCords});\r\n    }\r\n    copy2dArray = (arr) => {\r\n        let res = [];\r\n        for(let i in arr) {\r\n            let curr = [];\r\n            for(let j in arr[i]) {\r\n                curr.push(arr[i][j]);\r\n            }\r\n            res.push(curr);\r\n        }\r\n        return res;\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            totalCords: \r\n            Object.freeze([\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ]),\r\n            carrier: {start: null, direction: null},\r\n            battleship: {start: null, direction: null},\r\n            cruiser: {start: null, direction: null},\r\n            submarine: {start: null, direction: null},\r\n            destroyer: {start: null, direction: null},\r\n            selected: 0,\r\n            currentDirection: \"Direction\",\r\n            errorMessage: \"\",\r\n            renderingCords: Object.freeze([\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ])\r\n        });\r\n        this.buttons = [\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n            ['E','E','E','E','E','E','E','E','E','E','E'],\r\n        ];\r\n        this.preEdit=[[]];\r\n    }\r\n    getOnMouseEnter = (i, j) => {\r\n        if(this.state.selected >= 5 || this.props.game_state !== \"building\") return true;\r\n        let {currentDirection, selected} = this.state;\r\n        let totalCordsCopy = this.copy2dArray(this.state.totalCords);\r\n        let renderingCords = this.copy2dArray(this.state.totalCords);\r\n        let ship = SHIPS[selected];\r\n        if(this.state.currentDirection === \"Vertical\") {\r\n            if(i + ship.length > totalCordsCopy.length) {\r\n                this.setStateTracker({errorMessage: \"Can not add \" + ship.name + \" with given direciton because ship is too big.\"})\r\n            } else {\r\n                for(let _i = 0; _i < ship.length; _i++) {\r\n                    if(SHIPS.map(s => s.name.toLowerCase()).includes(this.state.totalCords[_i + i][j])) {\r\n                        this.setStateTracker({errorMessage: \"Can not add \" + ship.name + \" with given direciton because places are occupied.\"});\r\n                        return true;\r\n                    }\r\n                    renderingCords[_i + i][j] = ship.name.toLowerCase();\r\n                }\r\n                this.setStateTracker({renderingCords});\r\n            }\r\n        } else {\r\n            if(j + ship.length > totalCordsCopy[i].length) {\r\n                this.setStateTracker({errorMessage: \"Can not add \" + ship.name + \" with given direciton because ship is too big.\"});\r\n            } else {\r\n                for(let _j = 0; _j < ship.length; _j++) {\r\n                    if(SHIPS.map(s => s.name.toLowerCase()).includes(this.state.totalCords[i][j + _j])) {\r\n                        this.setStateTracker({errorMessage: \"Can not add \" + ship.name + \" with given direciton because places are occupied.\"});\r\n                        return true;\r\n                    }\r\n                    renderingCords[i][_j + j] = ship.name.toLowerCase();\r\n                }\r\n                this.setStateTracker({renderingCords});\r\n                \r\n            }\r\n        }\r\n    }\r\n    getOnMouseLeave = () => {\r\n        if(this.props.game_state !== \"building\") return;\r\n        this.setStateTracker({errorMessage: \"\", renderingCords: this.copy2dArray(this.state.totalCords)});\r\n    }\r\n    render() {\r\n        let {totalCords, renderingCords} = this.state;\r\n        const Styles = StylesCreator(this.props.game_state, this.props.owner);\r\n        return(\r\n            <Styles style={this.props.game_state === \"building\" ? {width: \"100vw\", height: \"100vh\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\", flexDirection: \"column\"} : {}}>\r\n                {this.props.game_state === \"building\" ? <h1>Place your board</h1> : null}\r\n                {this.props.game_state === \"building\" ? \r\n                  <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={0} onChange={selected => {\r\n                             this.setStateTracker({selected})\r\n                        }}>\r\n                            <ToggleButton value={0} variant=\"primary\">Carrier</ToggleButton>\r\n                            <ToggleButton value={1} variant=\"warning\">Battleship</ToggleButton>\r\n                            <ToggleButton value={2} variant=\"success\">Cruiser</ToggleButton>\r\n                            <ToggleButton value={3} variant=\"info\">Submarine</ToggleButton>\r\n                            <ToggleButton value={4} variant=\"primary\">Destroyer</ToggleButton>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                                    {this.state.currentDirection}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item onClick={e => this.setStateTracker({currentDirection: \"Vertical\"})}>Vertical</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={e => this.setStateTracker({currentDirection: \"Horizontal\"})}>Horizontal</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </ToggleButtonGroup>\r\n                    <h3 style={{marginTop: 10}}>{descriptions[this.state.selected]}</h3>\r\n                  </div>\r\n                  : null }\r\n                {React.createElement(\"div\", {className: \"main\"},...renderingCords.map((row, i) => \r\n                    React.createElement('div', {style: {display: \"flex\", flexDirection: \"row\", width: \"100%\", justifyContent: \"center\"}}, ...row.map((it, j) => <div alt={it} id={i + \"|\" + j} onMouseEnter={e => {\r\n                            let splitted = e.target.id.split(\"|\");\r\n                            this.getOnMouseEnter(Number(splitted[0]), Number(splitted[1]));\r\n                    }} onMouseLeave={e => {\r\n                        this.getOnMouseLeave();\r\n                    }} onClick={this.getOnClick}  ref={r => {\r\n                        this.buttons[i][j] = r; \r\n                    }} className={\"box \" + it + \" \" + this.props.game_state}/>))\r\n                    ))}\r\n                    <h2 style={{color: \"red\", height: \"1ch\"}}>\r\n                        {this.state.errorMessage}\r\n                    </h2>\r\n                    {this.props.game_state === \"building\" ? <div className=\"bottom-btn-c\">\r\n                        <Button onClick={this.reset}>\r\n                            Reset\r\n                        </Button>\r\n                        {\r\n                            this.state.carrier.start &&\r\n                             this.state.battleship.start &&\r\n                              this.state.cruiser.start &&\r\n                               this.state.submarine.start &&\r\n                                this.state.destroyer.start ?\r\n                                 <Button onClick={e => {\r\n                                         this.props.onBuildEnd({\r\n                                             data: {\r\n                                                totalCords: this.state.totalCords,\r\n                                                carrier: this.state.carrier,\r\n                                                battleship: this.state.battleship,\r\n                                                cruiser: this.state.cruiser, \r\n                                                submarine: this.state.submarine, \r\n                                                destroyer: this.state.destroyer\r\n                                               }\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    >Continue</Button> : null  \r\n                        }\r\n                    </div> : null}\r\n            </Styles>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Board, {SHIPS} from \"./Board\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Styles = styled.div\r\n`\r\n    h1, h2{\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport default class InGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turn: props.turn,\r\n            playerCords: props.playerData ? this.copy2dArray(props.playerData.totalCords) : null,\r\n            enemyCords: [\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E'],\r\n                ['E','E','E','E','E','E','E','E','E','E','E']\r\n            ],\r\n            self_hits: {\r\n                carrier: 0,\r\n                battleship: 0,\r\n                cruiser: 0, \r\n                submarine: 0, \r\n                destroyer: 0,\r\n                E: 0\r\n            },\r\n            total_sunks: 0,\r\n            isLost: false,\r\n            isWon: false\r\n        };\r\n        this.socket = props.socket;\r\n    }\r\n    componentDidMount() {\r\n        this.socket.on(\"MOVE_RECIEVED\", (data) => {\r\n            let {row, column} = data;\r\n            var sf = this.state.self_hits;\r\n            var field = this.state.playerCords[row][column];\r\n            let feedback = field !== \"E\" ? \"hit\" : \"miss\";\r\n            sf[field]++;\r\n            var isSunk = false;\r\n            var target = SHIPS.filter(ship => ship.name.toLowerCase() === field)\r\n            if(target.length > 0) {\r\n                isSunk = sf[target[0].name.toLowerCase()] === target[0].length;\r\n            }\r\n            let pc = this.copy2dArray(this.state.playerCords);\r\n            var sunkCords = [];\r\n            var ts = this.state.total_sunks;\r\n            if(isSunk) {\r\n                pc = pc.map((row, i) => row.map((col, j) => {\r\n                    if(col === field || this.props.playerData.totalCords[i][j] === field) {\r\n                        sunkCords.push({i,j});\r\n                        ts++;\r\n                        return \"sunk\";\r\n                    } else {\r\n                        return col;\r\n                    }\r\n                }))\r\n            } else {\r\n                pc[row][column] = feedback;\r\n            }\r\n            var isLost = ts >= SHIPS.map(s => s.length).reduce((acc, i) => acc + i);\r\n            this.setState({turn: \"self\", playerCords: pc, self_hits: sf, total_sunks: ts, isLost});\r\n            this.socket.emit(\"HIT_FEEDBACK\", {\r\n                row,\r\n                column,\r\n                sunk: {\r\n                    isSunk,field, sunkCords, isLost\r\n                },\r\n                feedback: isSunk ? \"sunk\" : feedback,\r\n                game_id: this.props.gameId,\r\n                user_id: this.props.userId\r\n            });\r\n        });\r\n        this.socket.on(\"BOARD_UPDATE\", (data) => {\r\n            let {row, column, feedback, sunk} = data;\r\n            let arr = this.copy2dArray(this.state.enemyCords);\r\n            if(sunk.isSunk) {\r\n                sunk.sunkCords.forEach(({i,j}) => {\r\n                    arr[i][j] = \"sunk\";\r\n                })\r\n            } else {\r\n                arr[row][column] = feedback;\r\n            }\r\n            this.setState({enemyCords: arr, isWon: sunk.isLost});\r\n        })\r\n    }\r\n    onBoxClick = (e) => {\r\n        if(this.state.turn !== \"self\") return;\r\n        let id = e.target.id;\r\n        let row, column;\r\n        [row, column] = id.split(\"|\").map(i => Number(i));\r\n        this.socket.emit(\"HIT\", {\r\n            game_id: this.props.gameId,\r\n            user_id: this.props.userId,\r\n            row,\r\n            column\r\n        });\r\n        this.setState({turn: \"enemy\"});\r\n    }\r\n    copy2dArray = (arr) => {\r\n        let res = [];\r\n        for(let i in arr) {\r\n            let curr = [];\r\n            for(let j in arr[i]) {\r\n                curr.push(arr[i][j]);\r\n            }\r\n            res.push(curr);\r\n        }\r\n        return res;\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isWon || this.state.isLost) {\r\n            let numHit = this.state.enemyCords.map(row => row.filter(col => col === \"hit\" || col === \"sunk\").length).reduce((acc, i) => acc + i);\r\n            let objHit = SHIPS.map(ship => ship.length).reduce((acc, i) => acc + i);\r\n            let numEnemyHit = this.state.playerCords.map(row => row.filter(col => col === \"hit\" || col === \"sunk\").length).reduce((acc, i) => acc + i);\r\n            return(\r\n                <div style={{width: \"100vw\", height: \"100vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n                    <Card\r\n                        bg={this.state.isWon ? \"success\" : \"danger\"}\r\n                        text={'white'}\r\n                        style={{ width: '80%', height: \"80%\"}}\r\n                        >\r\n                        <Card.Header>{this.state.isWon ? \"You Win\" : \"You Lose\"}</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Battle against {this.props.enemyName}{this.state.isWon ? \" succeed.\" : \" failed.\"} </Card.Title>\r\n                            <Card.Text>\r\n                                {this.state.isLost ? \r\n                                `You shoot ${numHit} coordinates but ${objHit - numHit} more was needed.`\r\n                                : \r\n                                 `You win! Enemy was ${objHit - numEnemyHit} hits behind you.`\r\n                                }\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n            <Styles style={{width: \"100vw\",height: \"100vh\"}}>\r\n                <h1>\r\n                    {this.state.turn === \"self\" ? \"Your Turn\" : \"Enemy turn\"}\r\n                </h1>\r\n                <Board game_state=\"ingame\" owner=\"enemy\" onBoxClick={this.onBoxClick} initialCords={this.state.enemyCords}/>\r\n                <h2>Your board</h2>\r\n                <Board game_state=\"ingame\" owner=\"self\" initialCords={this.state.playerCords}/>\r\n            </Styles>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport io from \"socket.io-client\";\nimport Board from './Board';\nimport InGame from './InGame';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game_state: \"connecting\",\n      playerData: null,\n      roomName: \"\",\n      username: \"\",\n      userId: \"\",\n      isFormOneValidated: false,\n      gameId: -1,\n      enemy: null,\n      game: null,\n      startable: false,\n      isHost: false,\n      opponentReady: false\n    }\n    \n  }\n  componentDidMount() {\n    this.socket = io(\"https://battleship-multiplayer.herokuapp.com/\");\n    this.socket.on(\"INITIAL_USER_DATA\", (data) =>  {\n      this.setState({\n        userId: data.user_id\n      })\n    });\n    this.socket.on(\"GAME_INFO\", (data) => {\n      this.setState({\n        gameId: data.game_id,\n        game_state: \"waiting\",\n        isHost: true\n      })\n    });\n    this.socket.on(\"OPPONENT_DISCONNECTED\", (data) => {\n      if(this.state.game_state === \"build\" || this.state.game_state === \"waiting\") {\n        this.setState({\n          game_state: \"waiting\",\n          startable: false,\n          enemy: null\n        })\n      }\n    })\n    this.socket.on(\"SUCCESS_CONNECTION\", ({enemy, game}) => {\n        this.setState({enemy, gameId: game.id, roomName: game.name, game_state: this.state.game_state === \"connecting\" ? \"waiting\" : this.state.game_state, startable: true});\n    });\n    this.socket.on(\"START_GAME\", (data) => {\n      this.setState({game_state: \"building\"});\n    });\n    this.socket.on(\"OPPONENT_READY\", (data) => {\n      this.setState({opponentReady: true});\n    })\n  }\n  createGame = () => {\n    this.socket.emit('CREATE_GAME', {\n      room_name: this.state.roomName,\n      username: this.state.username,\n      user_id: this.state.userId,\n      username: this.state.username\n    });\n  }\n  startGame = () => {\n    this.socket.emit('STARTING_GAME', {\n      game_id: this.state.gameId\n    });\n  }\n  createRoomOnSubmit = () => {\n    let nu = this.state.username.trim();\n    let ng = this.state.roomName.trim();\n    this.setState({\n      username: nu,\n      roomName: ng,\n      isFormOneValidated: true\n    });\n    if(nu.length === 0 || ng.length === 0) return;\n    this.createGame();\n  }\n  connectGameOnSubmit = (e) => {\n    e.preventDefault();\n    let nu = this.state.username.trim();\n    let ng = this.state.gameId;\n    this.setState({\n      username: nu,\n      roomName: ng,\n      isFormOneValidated: true\n    });\n    if(nu.length === 0 || ng === -1) return;\n    this.socket.emit(\"CONNECT_GAME\", {\n      game_id: this.state.gameId,\n      username: nu,\n      user_id: this.state.userId\n    });\n  }\n  render() {\n    return (\n      <div>\n        {\n          this.state.game_state === \"waiting\" ? \n            <div style={{width: \"100vw\", height: \"100vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                <h1 style={{padding: \"3vh\"}}>\n                  {this.state.startable ? \"Ready\" : \"Waiting for a player to join\"}\n                </h1>\n                <div style={{width: \"70%\", display: \"flex\", alignItems: \"center\", flexDirection: \"column\"}}>\n                  <ListGroup style={{width: \"100%\"}}>\n                    <ListGroup.Item active={true}>{this.state.roomName}</ListGroup.Item>\n                    <ListGroup.Item variant=\"info\">ID: {this.state.gameId}</ListGroup.Item>\n                    <ListGroup.Item variant=\"success\">{this.state.username}</ListGroup.Item>\n                    <ListGroup.Item variant={this.state.startable ? \"danger\" : \"light\"}>{this.state.enemy ? this.state.enemy.username : \"Waiting for a connection...\"}</ListGroup.Item>\n                  </ListGroup>\n                  <Button style={{marginTop: \"3vh\", alignSelf: \"flex-end\"}} size=\"lg\" disabled={!this.state.startable || !this.state.isHost} onClick={this.state.isHost ? this.startGame : () => {}}>\n                    {this.state.isHost ? \"Start\" : \"Waiting for the host to start...\"}\n                  </Button>\n                </div>\n            </div>\n          :\n          null\n        }\n        {\n            this.state.game_state === \"connecting\" ? \n            <div style={{width: \"100vw\", height: \"100vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n              <div style={{width: \"70%\", height: \"20%\", marginTop: \"10vh\"}}>\n              <Accordion>\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                      Create Game\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                    <Form ref={r => this.createForm = r} validated={this.state.isFormOneValidated} onSubmit={e => {\n                      e.preventDefault();\n                      this.createRoomOnSubmit();\n                    }}>\n                      <Form.Group controlId=\"formUsername\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control required placeholder=\"Pick a username\" value={this.state.username} onChange={e => {\n                          e.preventDefault();\n                          this.setState({\n                            username: e.target.value\n                          })\n                        }}/>\n                      </Form.Group>\n                      <Form.Group controlId=\"formRoomname\">\n                        <Form.Label>Room Name</Form.Label>\n                        <Form.Control required placeholder=\"Enter a room name\" value={this.state.roomName} onChange={e => {\n                          e.preventDefault();\n                          this.setState({\n                            roomName: e.target.value\n                          })\n                        }}/>\n                      </Form.Group>\n                      <Button variant=\"primary\" type=\"submit\">\n                        Create\n                      </Button>\n                    </Form>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      Connect a game\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                    <Form onSubmit={this.connectGameOnSubmit}>\n                      <Form.Group controlId=\"formUsernameConnect\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control required placeholder=\"Pick a username\" value={this.state.username} onChange={e => {\n                          e.preventDefault();\n                          this.setState({\n                            username: e.target.value\n                          })\n                        }}/>\n                      </Form.Group>\n                      <Form.Group controlId=\"formRoomnameConnect\">\n                        <Form.Label>Game Id</Form.Label>\n                        <Form.Control required placeholder=\"Enter id of the game\" value={this.state.gameId} onChange={e => {\n                          e.preventDefault();\n                          this.setState({\n                            gameId: Number(e.target.value)\n                          })\n                        }}/>\n                      </Form.Group>\n                      <Button variant=\"primary\" type=\"submit\">\n                        Connect\n                      </Button>\n                    </Form>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n              </div>\n            </div> \n            : null\n        }\n          {\n            this.state.game_state === \"building\" ? <Board isOpponentReady={this.state.opponentReady} onReady={() => {\n              this.socket.emit(\"PLAYER_READY_UPDATE\", {\n                user_id: this.state.userId,\n                ready_state: true,\n                game_id: this.state.gameId\n              });\n            }} onBuildEnd={(e) => {\n              this.setState({game_state: \"ingame\", playerData: e.data});\n            }} game_state={this.state.game_state}/> : null \n          }\n          {\n            this.state.game_state === \"ingame\" ? <InGame turn={this.state.isHost ? \"self\" : \"enemy\"} gameId={this.state.gameId} userId={this.state.userId} socket={this.socket} playerData={this.state.playerData} enemyName={this.state.enemy.username}/> : null\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}